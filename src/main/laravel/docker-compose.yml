version: "3"
services:
  # nginx:
  #   image: nginx:alpine
  #   restart: unless-stopped
  #   ports:
  #     - ${APP_PORT:-80}:80
  #   tty: true
  #   volumes:
  #     - ./:/var/www
  #     - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
  #   depends_on:
  #     - mysql
  #     - app

  # app:
  #   build: .
  #   restart: unless-stopped
  #   working_dir: /var/www/
  #   tty: true
  #   volumes:
  #     - ./:/var/www
  #     - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
  #   depends_on:
  #       mysql:
  #           condition: service_healthy

  app:
    build:
      context: .
      dockerfile: Dockerfile.single
    ports:
      - "8080:80"
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
    volumes:
      - .:/var/www/html
      - ./docker/php/conf.d/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ./docker/apache/000-default.conf:/etc/apache2/sites-available/000-default.conf
      - ./.env:/var/www/html/.env
    depends_on:
        mysql:
            condition: service_healthy
  mysql:
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - "${FORWARD_DB_PORT:-3306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_HOST: "0.0.0.0"
    tty: true
    healthcheck:
      test: ["CMD-SHELL", 'mysqladmin ping -u=$$DB_USERNAME -p=$$DB_PASSWORD']
      interval: 30s
      timeout: 10s
      retries: 10
    volumes:
      - ./docker/mysql/mysqldata:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
      - ./docker/mysql/mysql-files:/var/lib/mysql-files/

